{"version":3,"sources":["ActionCreators.js","CreateProject.js","App.js","RootReducer.js","index.js"],"names":["actions","deleteQuote","id","type","createQuote","cp","connect","dispatch","quote","React","useState","author","setQuote","Container","maxWidth","Box","display","justifyContent","alignItems","style","height","Grid","container","spacing","item","xs","Description","TextField","multiline","label","fullWidth","value","onChange","e","target","PostAdd","Button","onClick","Math","floor","random","console","log","alert","component","mt","variant","color","disableElevation","backgroundColor","bg","navBar","fontSize","fontFamily","letterSpacing","margin","textAlign","padding","borderRadius","btnPop","outline","border","cursor","fontWeight","float","strongHolder","width","footer","state","quotes","Something","map","post","initState","store","createStore","action","newPost","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a20961b1.chunk.js","sourcesContent":["const deleteQuote = (id) => {\r\n  return { type: \"DELETE_POST\", id: id };\r\n};\r\nconst createQuote = (cp) => {\r\n  return { type: \"CREATE_POST\", cp: cp };\r\n};\r\nconst actions = { deleteQuote, createQuote };\r\nexport default actions;\r\n","import React from \"react\";\r\nimport { Box, TextField, Grid, Button, Container } from \"@material-ui/core\";\r\nimport { Description, PostAdd } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"./ActionCreators\";\r\n\r\nfunction Create({ createQuote }) {\r\n  const [quote, setQuote] = React.useState({ quote: \"\", author: \"\" });\r\n\r\n  const handleSubmit = (e) => {\r\n    if (quote.quote !== \"\" && quote.author !== \"\") {\r\n      quote.id = Math.floor(Math.random() * 10 + 1);\r\n      createQuote(quote);\r\n      setQuote({ quote: \"\", author: \"\" });\r\n      console.log(\"push\");\r\n    } else {\r\n      alert(\"Empty Field! Kuch toh likh bhai...\");\r\n    }\r\n  };\r\n  return (\r\n    <Container maxWidth=\"xs\">\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{ height: \"40vh\" }}\r\n      >\r\n        <form>\r\n          <Grid container spacing={3} alignItems=\"flex-end\">\r\n            <Grid item xs={1}>\r\n              <Description />\r\n            </Grid>\r\n            <Grid item xs={11}>\r\n              <TextField\r\n                multiline\r\n                id=\"input-with-icon-grid\"\r\n                label=\"Quote\"\r\n                fullWidth\r\n                value={quote.quote}\r\n                onChange={(e) => setQuote({ ...quote, quote: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <PostAdd />\r\n            </Grid>\r\n\r\n            <Grid item xs={11}>\r\n              <TextField\r\n                id=\"input-with-icon-grid\"\r\n                label=\"Author\"\r\n                fullWidth\r\n                value={quote.author}\r\n                onChange={(e) => setQuote({ ...quote, author: e.target.value })}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Button\r\n                onClick={handleSubmit}\r\n                type=\"submit\"\r\n                component={Box}\r\n                mt={2}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disableElevation\r\n                fullWidth\r\n                style={{ backgroundColor: \"purple\" }}\r\n              >\r\n                Upload Quote\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { createQuote: (quote) => dispatch(actions.createQuote(quote)) };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Create);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Create from \"./CreateProject\";\r\nimport actions from \"./ActionCreators\";\r\n\r\nconst bg = \"purple\";\r\n\r\nconst navBar = {\r\n  backgroundColor: bg,\r\n  height: \"10vh\",\r\n  color: \"white\",\r\n  fontSize: \"1.2rem\",\r\n  fontFamily: \"Poppins\",\r\n  letterSpacing: \".1rem\",\r\n  margin: \"-1rem -1rem 0\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst container = {\r\n  fontFamily: \"Poppins\",\r\n  backgroundColor: bg,\r\n  padding: \"2rem\",\r\n  color: \"white\",\r\n  borderRadius: \"1rem\",\r\n  margin: \"1rem\",\r\n};\r\n\r\nconst btnPop = {\r\n  padding: \".5rem 1rem\",\r\n  borderRadius: \"1rem\",\r\n  outline: \"none\",\r\n  border: \"none\",\r\n  backgroundColor: \"white\",\r\n  color: bg,\r\n  cursor: \"pointer\",\r\n  fontWeight: \"bold\",\r\n  float: \"right\",\r\n};\r\n\r\nconst strongHolder = {\r\n  backgroundColor: \"white\",\r\n  color: \"purple\",\r\n  display: \"inline-block\",\r\n  width: \"1.5rem\",\r\n  height: \"1.5rem\",\r\n  borderRadius: \"50%\",\r\n  textAlign: \"center\",\r\n};\r\n\r\nconst footer = {\r\n  textAlign: \"center\",\r\n  color: bg,\r\n  fontFamily: \"Poppins\",\r\n  fontSize: \".8rem\",\r\n};\r\n\r\nfunction App({ quotes, deleteQuote }) {\r\n  // console.log(\"quotes:\", quotes);\r\n  const Something =\r\n    quotes &&\r\n    quotes.map((post) => (\r\n      <div style={container} key={post.id}>\r\n        <button style={btnPop} onClick={() => deleteQuote(post.id)}>\r\n          Pop\r\n        </button>\r\n        <strong style={strongHolder}>{post.id}</strong>\r\n        <p>{post.quote}</p>\r\n        <b>\r\n          <i>~{post.author}</i>\r\n        </b>\r\n      </div>\r\n    ));\r\n  return (\r\n    <>\r\n      <nav style={navBar}>\r\n        - Submit Your Quotes -<br />\r\n      </nav>\r\n      <Create />\r\n      {Something}\r\n      <p style={footer}>\r\n        Copyright 2k21 <b>@manikangkandas</b>\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    quotes: state.quotes,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteQuote: (id) => dispatch(actions.deleteQuote(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const initState = {\r\n  quotes: [\r\n    {\r\n      id: 1,\r\n      quote:\r\n        \"When I was a boy of fourteen, my father was so ignorant I could hardly stand to have the old man around. But when I got to be twenty-one, I was astonished at how much he had learned in seven years.\",\r\n      author: \"Mark Twain\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default function RootReducer(state = initState, action) {\r\n  if (action.type === \"DELETE_POST\") {\r\n    const newPost = state.quotes.filter((post) => post.id !== action.id);\r\n    // console.log(\"newPost->\", newPost);\r\n    return {\r\n      ...state,\r\n      quotes: newPost,\r\n    };\r\n  } else if (action.type === \"CREATE_POST\") {\r\n    // console.log(action.cp);\r\n    return {\r\n      ...state,\r\n      quotes: [...state.quotes, action.cp],\r\n    };\r\n  }\r\n  return state;\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport App from \"./App\";\r\nimport RootReducer from \"./RootReducer\";\r\n\r\nconst store = createStore(RootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}